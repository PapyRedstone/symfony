<?php

namespace Proxies\__CG__\WebServiceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DeplacementJour extends \WebServiceBundle\Entity\DeplacementJour implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'id', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'nbKm', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'montant', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'jour', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'date', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'created', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'updated', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'deplacement', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'typeDeplacement'];
        }

        return ['__isInitialized__', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'id', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'nbKm', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'montant', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'jour', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'date', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'created', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'updated', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'deplacement', '' . "\0" . 'WebServiceBundle\\Entity\\DeplacementJour' . "\0" . 'typeDeplacement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DeplacementJour $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbKm($nbKm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbKm', [$nbKm]);

        return parent::setNbKm($nbKm);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbKm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbKm', []);

        return parent::getNbKm();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontant($montant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontant', [$montant]);

        return parent::setMontant($montant);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontant', []);

        return parent::getMontant();
    }

    /**
     * {@inheritDoc}
     */
    public function setJour($jour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJour', [$jour]);

        return parent::setJour($jour);
    }

    /**
     * {@inheritDoc}
     */
    public function getJour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJour', []);

        return parent::getJour();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeplacement(\WebServiceBundle\Entity\Deplacement $deplacement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeplacement', [$deplacement]);

        return parent::setDeplacement($deplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeplacement', []);

        return parent::getDeplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeDeplacement(\WebServiceBundle\Entity\TypeDeplacement $typeDeplacement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeDeplacement', [$typeDeplacement]);

        return parent::setTypeDeplacement($typeDeplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeDeplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeDeplacement', []);

        return parent::getTypeDeplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternauteId(\WebServiceBundle\Entity\User $internauteId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternauteId', [$internauteId]);

        return parent::setInternauteId($internauteId);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternauteId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternauteId', []);

        return parent::getInternauteId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId(\WebServiceBundle\Entity\User $userId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

}
